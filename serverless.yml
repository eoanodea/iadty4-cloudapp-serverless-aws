org: eoanod
app: cloud-app-scenario-2
service: cloud-app-scenario-2-service
useDotenv: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  apiGateway:
    shouldStartNameWithService: true
    binaryMediaTypes:
      - "image/png"
      - "image/jpeg"
      - "multipart/form-data"
      - "application/json"
  lambdaHashingVersion: 20201221
  environment:
    DB_ATLAS_URL: ${param:DB_ATLAS_URL}
    aws_access_key_id: ${param:aws_access_key_id}
    aws_secret_access_key: ${param:aws_secret_access_key}
    aws_session_token: ${param:aws_session_token}
    aws_bucket_name: ${param:aws_bucket_name}

functions:
  festival_get_post:
    handler: src/festival/get_post.handler
    memorySize: 128
    description: Get all Festivals and create a new festival
    events:
      - http:
          path: /festivals
          method: post
          cors: true
      - http:
          path: /festivals
          method: get
          cors: true
  festival_put_delete:
    handler: src/festival/put_delete.handler
    memorySize: 128
    description: Get a single Festival, update or delete one
    events:
      - http:
          path: /festivals/{id}
          method: get
          cors: true
      - http:
          path: /festivals/{id}
          method: put
          cors: true
      - http:
          path: /festivals/{id}
          method: delete
          cors: true
  stage_get_post:
    handler: src/stage/get_post.handler
    memorySize: 128
    description: Get all Stages and create a new stage
    events:
      - http:
          path: /stages
          method: post
          cors: true
      - http:
          path: /stages
          method: get
          cors: true
  stage_put_delete:
    handler: src/stage/put_delete.handler
    memorySize: 128
    description: Get a single Stage, update or delete one
    events:
      - http:
          path: /stages/{id}
          method: get
          cors: true
      - http:
          path: /stages/{id}
          method: put
          cors: true
      - http:
          path: /stages/{id}
          method: delete
          cors: true
  performer_get_post:
    handler: src/performer/get_post.handler
    memorySize: 128
    description: Get all Performers and create a new performer
    events:
      - http:
          path: /performers
          method: post
          cors: true
      - http:
          path: /performers
          method: get
          cors: true
  performer_put_delete:
    handler: src/performer/put_delete.handler
    memorySize: 128
    description: Get a single Performer, update or delete one
    events:
      - http:
          path: /performers/{id}
          method: get
          cors: true
      - http:
          path: /performers/{id}
          method: put
          cors: true
      - http:
          path: /performers/{id}
          method: delete
          cors: true
  show_get_post:
    handler: src/show/get_post.handler
    memorySize: 128
    description: Get all Shows and create a new show
    events:
      - http:
          path: /shows
          method: post
          cors: true
      - http:
          path: /shows
          method: get
          cors: true
  show_put_delete:
    handler: src/show/put_delete.handler
    memorySize: 128
    description: Get a single Show, update or delete one
    events:
      - http:
          path: /shows/{id}
          method: get
          cors: true
      - http:
          path: /shows/{id}
          method: put
          cors: true
      - http:
          path: /shows/{id}
          method: delete
          cors: true
